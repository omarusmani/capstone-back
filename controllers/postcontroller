const mysql = require('mysql')
const pool = require('../sql/sql')

const list = (req, res) => {
  pool.query("SELECT * FROM POSTS", (err, rows) => {
    if (err) {
      console.log({ message: "Error occurred: " + err });
      return res.status(500).send("An unexpected error occurred");
    }
    // console.log(rows)
    res.json(rows);
  });
};
  
  const show = (req, res) => {
    pool.query(
      `SELECT * FROM POSTS WHERE username = ${req.params.username}`,
      (err, row) => {
        if (err) {
          console.log({ message: "Error occurred: " + err });
          return res.status(500).send("An unexpected error occurred");
        }
        res.json(row);
      }
    );
  };
  
  const showTradesByCustomer = (req, res) => {
    pool.query(
      `SELECT 
        customers.id, 
        customers.first_name, 
        trades.title 
      FROM trades 
        JOIN customers 
        WHERE trades.user_id = ${req.params.id} 
        AND
        customers.id = ${req.params.id}`,
      (err, row) => {
        if (err) {
          console.log({ message: "Error occurred: " + err });
          return res.status(500).send("An unexpected error occurred");
        }
        res.json(row);
      }
    );
  };
  
  const create = (req, res) => {
    const { first_name, last_name, email } = req.body;
  
    pool.query(
      `INSERT INTO POSTS (first_name, last_name, email) 
        VALUES ("${first_name}","${last_name}", "${email}")`,
      (err, row) => {
        if (err) {
          console.log({ message: "Error occurred: " + err });
          return res.status(500).send("An unexpected error occurred");
        }
        res.json(row);
      }
    );
  };
  
  
  const remove = (req, res) => {
    pool.query(
      `DELETE FROM POSTS WHERE id = ${req.params.username}`,
      (err, row) => {
        if (err) {
          console.log({ message: "Error occurred: " + err });
          return res.status(500).send("An unexpected error occurred");
        }
        res.json(row);
      }
    );
  };
  
  module.exports = {
    list,
    show,
    create,
    remove,
  };